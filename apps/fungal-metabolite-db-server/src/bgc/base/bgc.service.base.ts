/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bgc as PrismaBgc } from "@prisma/client";

export class BgcServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BgcCountArgs, "select">): Promise<number> {
    return this.prisma.bgc.count(args);
  }

  async bgcs(args: Prisma.BgcFindManyArgs): Promise<PrismaBgc[]> {
    return this.prisma.bgc.findMany(args);
  }
  async bgc(args: Prisma.BgcFindUniqueArgs): Promise<PrismaBgc | null> {
    return this.prisma.bgc.findUnique(args);
  }
  async createBgc(args: Prisma.BgcCreateArgs): Promise<PrismaBgc> {
    return this.prisma.bgc.create(args);
  }
  async updateBgc(args: Prisma.BgcUpdateArgs): Promise<PrismaBgc> {
    return this.prisma.bgc.update(args);
  }
  async deleteBgc(args: Prisma.BgcDeleteArgs): Promise<PrismaBgc> {
    return this.prisma.bgc.delete(args);
  }
}
