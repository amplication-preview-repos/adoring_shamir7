/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Species as PrismaSpecies } from "@prisma/client";

export class SpeciesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SpeciesCountArgs, "select">): Promise<number> {
    return this.prisma.species.count(args);
  }

  async speciesItems(
    args: Prisma.SpeciesFindManyArgs
  ): Promise<PrismaSpecies[]> {
    return this.prisma.species.findMany(args);
  }
  async species(
    args: Prisma.SpeciesFindUniqueArgs
  ): Promise<PrismaSpecies | null> {
    return this.prisma.species.findUnique(args);
  }
  async createSpecies(args: Prisma.SpeciesCreateArgs): Promise<PrismaSpecies> {
    return this.prisma.species.create(args);
  }
  async updateSpecies(args: Prisma.SpeciesUpdateArgs): Promise<PrismaSpecies> {
    return this.prisma.species.update(args);
  }
  async deleteSpecies(args: Prisma.SpeciesDeleteArgs): Promise<PrismaSpecies> {
    return this.prisma.species.delete(args);
  }
}
